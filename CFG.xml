<?xml version="1.0" encoding="UTF-8"?>
<CFG>
    <PRODUCTIONRULES>
        <PROGPRIMEPRIME>
            <production>
                <PROGPRIME terminal="false"/>
                <KEYWORD terminal="true">
                    <value>$</value>
                </KEYWORD>
            </production>
        </PROGPRIMEPRIME>
        <PROGPRIME>
            <production>
                <PROG terminal="false"/>
            </production>
        </PROGPRIME>
        <PROG>
            <!-- PROG ::= main GLOBVARS ALGO FUNCTIONS -->
            <production>
                <KEYWORD terminal="true">
                    <value>main</value>
                </KEYWORD> 
                <GLOBVARS terminal="false" /> 
                <ALGO terminal="false" /> 
                <FUNCTIONS terminal="false" />
            </production>
            <!-- PROG ::= main ALGO FUNCTIONS                   # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>main</value>
                </KEYWORD> 
                <ALGO terminal="false" /> 
                <FUNCTIONS terminal="false" />
            </production>
            <!-- PROG ::= main GLOBVARS ALGO                    # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>main</value>
                </KEYWORD> 
                <GLOBVARS terminal="false" /> 
                <ALGO terminal="false" /> 
            </production>
            <!-- PROG ::= main ALGO                             # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>main</value>
                </KEYWORD> 
                <ALGO terminal="false" /> 
            </production>
        </PROG>

        <GLOBVARS>
            <!-- GLOBVARS ::= VTYP VNAME ,                      # NEW RULE-->
            <production>
                <VTYP terminal="false" /> 
                <VNAME terminal="false" /> 
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
            </production>
            <!-- GLOBVARS ::= VTYP VNAME , GLOBVARS -->
            <production>
                <VTYP terminal="false" /> 
                <VNAME terminal="false" /> 
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <GLOBVARS terminal="false" />
            </production>
        </GLOBVARS>

        <VTYP>
            <!-- VTYP ::= num -->
            <production>
                <KEYWORD terminal="true">
                    <value>num</value>
                </KEYWORD>
            </production>
            <!-- VTYP ::= void -->
            <production>
                <KEYWORD terminal="true">
                    <value>text</value>
                </KEYWORD>
            </production>
        </VTYP>

        <VNAME>
            <!-- VNAME ::= ID -->
            <production>
                <ID terminal="true">
                    <pattern>V_[a-z][a-z0-9]*</pattern>
                </ID>
            </production>
        </VNAME>

        <ALGO>
            <!--ALGO ::= begin INSTRUC end -->
            <production>
                <KEYWORD terminal="true">
                    <value>begin</value>
                </KEYWORD>
                <INSTRUC terminal="false" />
                <KEYWORD terminal="true">
                    <value>end</value>
                </KEYWORD>
            </production>
            <!--ALGO ::= begin end                              # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>begin</value>
                </KEYWORD>
                <KEYWORD terminal="true">
                    <value>end</value>
                </KEYWORD>
            </production>
        </ALGO>

        <INSTRUC>
            <!--ALGO ::= COMMAND ;                              # NEW RULE-->
            <production>
                <COMMAND terminal="false" />
                <KEYWORD terminal="true">
                    <value>;</value>
                </KEYWORD>
            </production>
            <!--ALGO ::= COMMAND ; INSTRUC -->
            <production>
                <COMMAND terminal="false" />
                <KEYWORD terminal="true">
                    <value>;</value>
                </KEYWORD>
                <INSTRUC terminal="false" />
            </production>
        </INSTRUC>

        <COMMAND>
            <!-- COMMAND ::= skip -->
            <production>
                <KEYWORD terminal="true">
                    <value>skip</value>
                </KEYWORD>
            </production>
            <!-- COMMAND ::= halt -->
            <production>
                <KEYWORD terminal="true">
                    <value>halt</value>
                </KEYWORD>
            </production>
            <!-- COMMAND ::= print -->
            <production>
                <KEYWORD terminal="true">
                    <value>print</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
            </production>
            <!-- COMMAND ::= ASSIGN -->
            <production>
                <ASSIGN terminal="false" />
            </production>
            <!-- COMMAND ::= FNAME( ATOMIC , ATOMIC , ATOMIC )  # NEW RULE-->
            <production>
                <FNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
            <!-- COMMAND ::= BRANCH -->
            <production>
                <BRANCH terminal="false" />
            </production>
            <!-- COMMAND ::= return ATOMIC -->
            <production>
                <KEYWORD terminal="true">
                    <value>return</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
            </production>
        </COMMAND>

        <ATOMIC>
            <!-- ATOMIC ::= VNAME -->
            <production>
                <VNAME terminal="false" />
            </production>
            <!-- ATOMIC ::= CONST -->
            <production>
                <CONST terminal="false" />
            </production>
        </ATOMIC>

        <CONST>
            <!-- TODO: check of expressions correct, test to see if works -->
            <!-- CONST ::= LITERAL -->
            <production>
                <LITERAL terminal="true">
                    <!-- <pattern>0|0.([0-9])*[1-9]|-0.([0-9])*[1-9]|[1-9]([0-9])*|-[1-9]([0-9])*|[1-9]([0-9])*.([0-9])*[1-9]|-[1-9]([0-9])*.([0-9])*[1-9]</pattern> -->
                    <pattern>0|0.([0-9])*[1-9]</pattern>
                </LITERAL>
            </production>
            <!-- CONST ::= LITERAL -->
            <production>
                <LITERAL terminal="true">
                    <!-- <pattern>"[A-Z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]"|"[A-Z][a-z][a-z][a-z][a-z][a-z][a-z]"|"[A-Z][a-z][a-z][a-z][a-z][a-z]"|"[A-Z][a-z][a-z][a-z][a-z]"|"[A-Z][a-z][a-z][a-z]"|"[A-Z][a-z][a-z]"|"[A-Z][a-z]"|"[A-Z]"</pattern> -->
                    <pattern>"[A-Z]"</pattern>
                </LITERAL>
            </production>
        </CONST>

        <ASSIGN>
            <!-- ASSIGN ::= VNAME < input -->
            <production>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>&lt;input</value>
                </KEYWORD>
            </production>
            <!-- ASSIGN ::= VNAME = TERM -->
            <production>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>=</value>
                </KEYWORD>
                <TERM terminal="false" />
            </production>
            <!-- ASSIGN ::= VNAME = FNAME( ATOMIC , ATOMIC , ATOMIC ) # NEW RULE-->
            <production>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>=</value>
                </KEYWORD>
                <FNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
        </ASSIGN>


        <BRANCH>
            <!-- BRANCH ::= if COND then ALGO else ALGO -->
            <production>
                <KEYWORD terminal="true">
                    <value>if</value>
                </KEYWORD>
                <COND terminal="false" />
                <KEYWORD terminal="true">
                    <value>then</value>
                </KEYWORD>
                <ALGO terminal="false" />
                <KEYWORD terminal="true">
                    <value>else</value>
                </KEYWORD>
                <ALGO terminal="false" />
            </production>
        </BRANCH>

        <TERM>
            <!-- TERM ::= ATOMIC -->
            <production>
                <ATOMIC terminal="false" />
            </production>
            <!-- TERM ::= OP -->
            <production>
                <OP terminal="false" />
            </production>
        </TERM>

        <OP>
            <!-- OP ::= UNOP ( ARG ) -->
            <production>
                <UNOP terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <ARG terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
            <!-- OP ::= BINOP ( ARG , ARG ) -->
            <production>
                <BINOP terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <ARG terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ARG terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
        </OP>

        <ARG>
            <!-- ARG ::= TERM                                   # NEW RULE-->
            <production>
                <TERM terminal="false" />
            </production>
        </ARG>

        <COND>
            <!-- COND ::= SIMPLE -->
            <production>
                <SIMPLE terminal="false" />
            </production>
            <!-- COND ::= COMPOSIT -->
            <production>
                <COMPOSIT terminal="false" />
            </production>
        </COND>

        <SIMPLE>
            <!-- SIMPLE ::= BINOP ( ATOMIC , ATOMIC ) -->
            <production>
                <BINOP terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <ATOMIC terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
        </SIMPLE>

        <COMPOSIT>
            <!-- COMPOSITE ::= BINOP ( SIMPLE , SIMPLE ) -->
            <production>
                <BINOP terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <SIMPLE terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <SIMPLE terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
            <!-- COMPOSITE ::= UNOP ( SIMPLE ) -->
            <production>
                <UNOP terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <SIMPLE terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
        </COMPOSIT>

        <UNOP>
            <!-- UNOP ::= not -->
            <production>
                <KEYWORD terminal="true">
                    <value>not</value>
                </KEYWORD>
            </production>
            <!-- UNOP ::= sqrt -->
            <production>
                <KEYWORD terminal="true">
                    <value>sqrt</value>
                </KEYWORD>
            </production>
        </UNOP>

        <BINOP>
            <!-- BINOP ::= add -->
            <production>
                <KEYWORD terminal="true">
                    <value>add</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= sub -->
            <production>
                <KEYWORD terminal="true">
                    <value>sub</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= mul -->
            <production>
                <KEYWORD terminal="true">
                    <value>mul</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= div -->
            <production>
                <KEYWORD terminal="true">
                    <value>div</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= and -->
            <production>
                <KEYWORD terminal="true">
                    <value>and</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= or -->
            <production>
                <KEYWORD terminal="true">
                    <value>or</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= eq -->
            <production>
                <KEYWORD terminal="true">
                    <value>eq</value>
                </KEYWORD>
            </production>
            <!-- BINOP ::= grt -->
            <production>
                <KEYWORD terminal="true">
                    <value>grt</value>
                </KEYWORD>
            </production>
        </BINOP>

        <FNAME>
            <!-- FNAME ::= ID -->
            <production>
                <ID terminal="true">
                    <pattern>F_[a-z][a-z0-9]*</pattern>
                </ID>
            </production>
        </FNAME>

        <FUNCTIONS>
            <!-- FUNCTIONS ::= DECL                             # NEW RULE-->
            <production>
                <DECL terminal="false" />
            </production>
            <!-- FUNCTIONS ::= DECL FUNCTIONS -->
            <production>
                <DECL terminal="false" />
                <FUNCTIONS terminal="false" />
            </production>
        </FUNCTIONS>

        <DECL>
            <!-- DECL ::= HEADER BODY -->
            <production>
                <HEADER terminal="false" />
                <BODY terminal="false" />
            </production>
        </DECL>

        <HEADER>
            <!-- HEADER ::= void FNAME( VNAME , VNAME , VNAME ) # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>void</value>
                </KEYWORD>
                <FNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
            <!-- HEADER ::= num FNAME( VNAME , VNAME , VNAME )  # NEW RULE-->
            <production>
                <KEYWORD terminal="true">
                    <value>num</value>
                </KEYWORD>
                <FNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>(</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>)</value>
                </KEYWORD>
            </production>
        </HEADER>

        <BODY>
            <!-- BODY ::= PROLOG LOCVARS ALGO EPILOG SUBFUNCS end -->
            <production>
                <PROLOG terminal="false" />
                <LOCVARS terminal="false" />
                <ALGO terminal="false" />
                <EPILOG terminal="false" />
                <SUBFUNCS terminal="false" />
                <KEYWORD terminal="true">
                    <value>end</value>
                </KEYWORD>
            </production>
            <!-- BODY ::= PROLOG LOCVARS ALGO EPILOG end        # NEW RULE-->
            <production>
                <PROLOG terminal="false" />
                <LOCVARS terminal="false" />
                <ALGO terminal="false" />
                <EPILOG terminal="false" />
                <KEYWORD terminal="true">
                    <value>end</value>
                </KEYWORD>
            </production>
        </BODY>

        <PROLOG>
            <!-- PROLOG ::= { -->
            <production>
                <KEYWORD terminal="true">
                    <value>{</value>
                </KEYWORD>
            </production>
        </PROLOG>

        <EPILOG>
            <!-- EPILOG ::= } -->
            <production>
                <KEYWORD terminal="true">
                    <value>}</value>
                </KEYWORD>
            </production>
        </EPILOG>

        <LOCVARS>
            <!-- LOCVARS ::= VTYP VNAME , VTYP VNAME , VTYP VNAME , -->
            <production>
                <VTYP terminal="false" />
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VTYP terminal="false" />
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
                <VTYP terminal="false" />
                <VNAME terminal="false" />
                <KEYWORD terminal="true">
                    <value>,</value>
                </KEYWORD>
            </production>
        </LOCVARS>

        <SUBFUNCS>
            <!-- SUBFUNCS ::= FUNCTIONS -->
            <production>
                <FUNCTIONS terminal="false" />
            </production>
        </SUBFUNCS>
    </PRODUCTIONRULES>
    <TERMINALS>
        <KEYWORD>
            <value class="KEYWORD">main</value>

            <value class="KEYWORD">num</value>
            <value class="KEYWORD">text</value>

            <value class="KEYWORD">begin</value>
            <value class="KEYWORD">end</value>

            <value class="KEYWORD">;</value>

            <value class="KEYWORD">skip</value>
            <value class="KEYWORD">halt</value>
            <value class="KEYWORD">print</value>
            <value class="KEYWORD">return</value>

            <value class="KEYWORD">&lt;input</value>
            <value class="KEYWORD">=</value>

            <value class="KEYWORD">(</value>
            <value class="KEYWORD">,</value>
            <value class="KEYWORD">)</value>

            <value class="KEYWORD">if</value>
            <value class="KEYWORD">then</value>
            <value class="KEYWORD">else</value>

            <value class="KEYWORD">not</value>
            <value class="KEYWORD">sqrt</value>

            <value class="KEYWORD">or</value>
            <value class="KEYWORD">and</value>
            <value class="KEYWORD">eq</value>
            <value class="KEYWORD">grt</value>
            <value class="KEYWORD">add</value>
            <value class="KEYWORD">sub</value>
            <value class="KEYWORD">mul</value>
            <value class="KEYWORD">div</value>

            <value class="KEYWORD">void</value>

            <value class="KEYWORD">{</value>
            <value class="KEYWORD">}</value>
            <value class="KEYWORD">$</value>
        </KEYWORD>

        <ID>
            <pattern class="F_Token">F_[a-z][a-z0-9]*</pattern>
            <pattern class="V_Token">V_[a-z][a-z0-9]*</pattern>
        </ID>

        <LITERAL>
            <pattern class="N_Token">0</pattern>
            <pattern class="N_Token">0.([0-9])*[1-9]</pattern>
            <pattern class="N_Token">-0.([0-9])*[1-9]</pattern>
            <pattern class="N_Token">[1-9]([0-9])*</pattern>
            <pattern class="N_Token">-[1-9]([0-9])*</pattern>
            <pattern class="N_Token">[1-9]([0-9])*.([0-9])*[1-9]</pattern>
            <pattern class="N_Token">-[1-9]([0-9])*.([0-9])*[1-9]</pattern>
            <pattern class="T_Token">"[A-Z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z][a-z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z][a-z][a-z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z][a-z][a-z][a-z][a-z]"</pattern>
            <pattern class="T_Token">"[A-Z][a-z][a-z][a-z][a-z][a-z][a-z][a-z]"</pattern>
        </LITERAL>

    </TERMINALS>
</CFG>